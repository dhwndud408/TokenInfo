{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OhJuYoung\\\\Desktop\\\\EthereumApp\\\\token-web\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from 'web3';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initWeb3 = async () => {\n      if (window.ethereum) {\n        console.log('Recent mode');\n        this.web3 = new Web3(window.ethereum);\n\n        try {\n          // Request account access if needed\n          await window.ethereum.enable(); // Acccounts now exposed\n          // this.web3.eth.sendTransaction({/* ... */});\n        } catch (error) {\n          // User denied account access...\n          console.log(`User denied account access error : ${error}`);\n        }\n      } // Legacy dapp browsers...\n      else if (window.web3) {\n          console.log('legacy mode');\n          this.web3 = new Web3(Web3.currentProvider); // Acccounts always exposed\n          // web3.eth.sendTransaction({/* ... */});\n        } // Non-dapp browsers...\n        else {\n            console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n          }\n\n      let accounts = await this.web3.eth.getAccounts();\n      this.account = accounts[0]; //this.lotteryContract = new this.web3.eth.Contract(lotteryABI, lotteryAddress);\n    };\n\n    this.state = {\n      betRecords: [],\n      winRecords: [],\n      failRecords: [],\n      pot: '0',\n      challenges: ['A', 'B'],\n      finalRecords: [{\n        bettor: '0xabcd...',\n        index: '0',\n        challenges: 'ab',\n        answer: 'ab',\n        targetBlockNumber: '10',\n        pot: '0'\n      }]\n    };\n  }\n\n  async componentDidMount() {\n    await this.initWeb3();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }\n    }, \" src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"App-link\",\n      href: \"https://react.org\",\n      target: \"_blank\",\n      ref: \"noopener noreferer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), \"Learn React\"));\n  }\n\n} // index address challenge answer pot status answerBlockNumber\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/OhJuYoung/Desktop/EthereumApp/token-web/src/App.js"],"names":["React","Component","Web3","App","constructor","props","initWeb3","window","ethereum","console","log","web3","enable","error","currentProvider","accounts","eth","getAccounts","account","state","betRecords","winRecords","failRecords","pot","challenges","finalRecords","bettor","index","answer","targetBlockNumber","componentDidMount","render","logo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAE1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwBnBC,QAxBmB,GAwBR,YAAY;AACrB,UAAIC,MAAM,CAACC,QAAX,EAAqB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,aAAKC,IAAL,GAAY,IAAIT,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAZ;;AACA,YAAI;AACA;AACA,gBAAMD,MAAM,CAACC,QAAP,CAAgBI,MAAhB,EAAN,CAFA,CAGA;AACA;AACH,SALD,CAKE,OAAOC,KAAP,EAAc;AACZ;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAa,sCAAqCG,KAAM,EAAxD;AACH;AACF,OAZD,CAaA;AAbA,WAcK,IAAIN,MAAM,CAACI,IAAX,EAAiB;AACpBF,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,eAAKC,IAAL,GAAY,IAAIT,IAAJ,CAASA,IAAI,CAACY,eAAd,CAAZ,CAFoB,CAGpB;AACA;AACD,SALI,CAML;AANK,aAOA;AACHL,YAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACD;;AAED,UAAIK,QAAQ,GAAG,MAAM,KAAKJ,IAAL,CAAUK,GAAV,CAAcC,WAAd,EAArB;AACA,WAAKC,OAAL,GAAeH,QAAQ,CAAC,CAAD,CAAvB,CA3BqB,CA6BrB;AAED,KAvDkB;;AAGjB,SAAKI,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIXC,MAAAA,GAAG,EAAE,GAJM;AAKXC,MAAAA,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,CALD;AAMXC,MAAAA,YAAY,EAAE,CAAC;AACbC,QAAAA,MAAM,EAAC,WADM;AAEbC,QAAAA,KAAK,EAAC,GAFO;AAGbH,QAAAA,UAAU,EAAC,IAHE;AAIbI,QAAAA,MAAM,EAAC,IAJM;AAKbC,QAAAA,iBAAiB,EAAC,IALL;AAMbN,QAAAA,GAAG,EAAC;AANS,OAAD;AANH,KAAb;AAeD;;AAED,QAAMO,iBAAN,GAA0B;AACxB,UAAM,KAAKxB,QAAL,EAAN;AACD;;AAmCDyB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADP,yBAFJ,eAKI;AAAG,MAAA,SAAS,EAAC,UAAb;AAAwB,MAAA,IAAI,EAAC,mBAA7B;AAAiD,MAAA,MAAM,EAAC,QAAxD;AAAiE,MAAA,GAAG,EAAC,oBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,gBADF,CADF;AAeD;;AA3EyB,C,CA6E5B;;;AACA,eAAe7B,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Web3 from 'web3';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      betRecords: [],\n      winRecords: [],\n      failRecords: [],\n      pot: '0',\n      challenges: ['A', 'B'],\n      finalRecords: [{\n        bettor:'0xabcd...',\n        index:'0',\n        challenges:'ab',\n        answer:'ab',\n        targetBlockNumber:'10',\n        pot:'0'\n      }]\n    }\n  }\n\n  async componentDidMount() {\n    await this.initWeb3();\n  }\n\n  initWeb3 = async () => {\n    if (window.ethereum) {\n      console.log('Recent mode')\n      this.web3 = new Web3(window.ethereum);\n      try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          // this.web3.eth.sendTransaction({/* ... */});\n      } catch (error) {\n          // User denied account access...\n          console.log(`User denied account access error : ${error}`)\n      }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n      console.log('legacy mode')\n      this.web3 = new Web3(Web3.currentProvider);\n      // Acccounts always exposed\n      // web3.eth.sendTransaction({/* ... */});\n    }\n    // Non-dapp browsers...\n    else {\n      console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n\n    let accounts = await this.web3.eth.getAccounts();\n    this.account = accounts[0];\n\n    //this.lotteryContract = new this.web3.eth.Contract(lotteryABI, lotteryAddress);\n    \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              Edit <code> src/App.js</code> and save to reload.\n            </p>      \n            <a className=\"App-link\" href=\"https://react.org\" target=\"_blank\" ref=\"noopener noreferer\">\n            </a>\n            Learn React\n\n\n        </header>\n      </div>\n    );\n  }\n}\n// index address challenge answer pot status answerBlockNumber\nexport default App;"]},"metadata":{},"sourceType":"module"}